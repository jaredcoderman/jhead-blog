<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cybersecurity on jhead.blog</title>
    <link>http://localhost:1313/tags/cybersecurity/</link>
    <description>Recent content in Cybersecurity on jhead.blog</description>
    <generator>Hugo -- 0.147.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cybersecurity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Initial Access: Spearphishing Example</title>
      <link>http://localhost:1313/posts/initial-access/</link>
      <pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/initial-access/</guid>
      <description>&lt;p&gt;In the MITRE ATT&amp;amp;CK Framework, which classifies and creates chains of events for certain kinds of hacker behavior, Initial Access is one of the first tactics used in an attack. It’s sort of self-explanatory—it describes how the attacker first got into a system. I’m just learning about these concepts, so I wanted to start from the beginning. I’m interested in a few techniques, and I’ll go over them in my next few posts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Hack of the Decade: SolarWinds</title>
      <link>http://localhost:1313/posts/solarwinds-hack/</link>
      <pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/solarwinds-hack/</guid>
      <description>&lt;p&gt;On March 26, 2020, a hacker group identified by Microsoft as &lt;strong&gt;Nobelium&lt;/strong&gt; launched what is widely considered the biggest supply chain hack of the 21st century. Known as the &lt;strong&gt;SolarWinds Hack&lt;/strong&gt;, this event wasn’t significant because it affected a single company—it was significant because it compromised software used by thousands of organizations, including 6 U.S. federal agencies. The attackers accessed sensitive internal communications, email systems, and identity systems, potentially for months without detection.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lateral Movement</title>
      <link>http://localhost:1313/posts/lateral-movement/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/lateral-movement/</guid>
      <description>&lt;p&gt;Once a hacker has gained access to a system through their path of choice, the next usual step is to try and gain access to other—usually more high-profile machines on the network. This process is known as &lt;strong&gt;lateral movement&lt;/strong&gt;, and it can be done in a variety of ways. To be more specific about &lt;em&gt;why&lt;/em&gt; hackers do this, let’s talk about the advantages of gaining access to other machines.&lt;/p&gt;
&lt;h3 id=&#34;why&#34;&gt;Why?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Gain access to more privileged accounts&lt;/li&gt;
&lt;li&gt;Reach valuable data (like on a file server)&lt;/li&gt;
&lt;li&gt;Spread persistence across the network (creating re-entry points or backdoors)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having skill in lateral movement is arguably one of the most important things for a hacker. It’s their ability to &lt;em&gt;move&lt;/em&gt; through the environment once they get in, and it must be done with precision and stealth. It’s also where many attackers get caught, since they can leave plenty of breadcrumbs along the way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Living off the Land Attacks</title>
      <link>http://localhost:1313/posts/living-off-the-land-attack/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/living-off-the-land-attack/</guid>
      <description>&lt;h2 id=&#34;a-brief-history&#34;&gt;A Brief History&lt;/h2&gt;
&lt;p&gt;As cyber defenses evolved beyond file-based malware, hackers and red teamers had to develop new strategies for maintaining unauthorized access to systems. While they still needed some kind of initial foothold—through things like phishing links, stolen remote desktop credentials, or other methods—once inside, maintaining access became a challenge. Antivirus software was getting stronger, and simply dropping suspicious binaries was no longer effective.&lt;/p&gt;
&lt;p&gt;To adapt, some hackers in the 2010s developed what is now known as a &lt;strong&gt;Living off the Land&lt;/strong&gt; (LotL) attack. This type of attack uses already trusted system tools like PowerShell, WMI, or certutil to run malicious commands, download payloads, or exfiltrate data—often without writing anything to disk. It’s hard to detect because the behavior doesn’t originate from some unknown file or process like traditional malware—it comes from legitimate processes that the system is likely already using, allowing it to blend into the background.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The State of ML in Cybersecurity</title>
      <link>http://localhost:1313/posts/the-current-state-of-ml-in-cs/</link>
      <pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/the-current-state-of-ml-in-cs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.skrasser.com/blog/2025/02/08/detecting-malware-with-machine-learning/&#34;&gt;Crowdstrike Article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While AI is on the rise and seems to be unstoppable, its applications to threat detection—specifically in cybersecurity—have yet to show great promise. Traditional approaches to applying machine learning to threat detection overlook some important factors. The first is the sheer amount of data required to train a reliable detection model. While there is no shortage of data in areas like memory usage, CPU usage, file changes, and other system activity, the data for successfully flagging actual malicious behavior—especially malware executions—is sparse.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
